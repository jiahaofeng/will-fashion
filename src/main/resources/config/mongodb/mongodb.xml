<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:mongo="http://www.springframework.org/schema/data/mongo" xsi:schemaLocation="http://www.springframework.org/schema/context     
          http://www.springframework.org/schema/context/spring-context.xsd     
          http://www.springframework.org/schema/data/mongo     
          http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd     
          http://www.springframework.org/schema/beans     
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">  
  
    <!-- 加载mongodb的属性配置文件 -->  
    <!-- <context:property-placeholder location="classpath:config/properties/mongodb.properties" /> -->  
  
    <!-- 定义mongo对象，对应的是mongodb官方jar包中的Mongo，replica-set设置集群副本的ip地址和端口 -->  
    <mongo:mongo id="mongo" host="${mongo.host}" port="${mongo.port}" replica-set="${mongo.replicaSet}">  
        <!-- 一些连接属性的设置 -->  
        <mongo:options   
         connections-per-host="${mongo.connectionsPerHost}"   
         threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"  
         connect-timeout="${mongo.connectTimeout}"   
         max-wait-time="${mongo.maxWaitTime}"   
         auto-connect-retry="${mongo.autoConnectRetry}"   
         socket-keep-alive="${mongo.socketKeepAlive}"   
         socket-timeout="${mongo.socketTimeout}"   
         slave-ok="${mongo.slaveOk}"   
         write-number="1"   
         write-timeout="0"   
         write-fsync="true" />  
    </mongo:mongo> 
    <!-- mongo的工厂，通过它来取得mongo实例,dbname为mongodb的数据库名，没有的话会自动创建 --> 
    <mongo:db-factory id="DidatourNew" dbname="${mongo.databaseName}" username="${mongo.database.username}" password="${mongo.database.password}"  mongo-ref="mongo"/>  
  
  
  	<!-- 自动扫描以下包的类 -->  
    <!-- <mongo:mapping-converter base-package="com.testbase.*.domain" />  --> 
  
    <bean id="mappingContext" class="org.springframework.data.mongodb.core.mapping.MongoMappingContext" />  
    
  	 
  	
  	<!-- 配置mongodb映射类型 -->  
    <bean id="mappingMongoConverter" class="org.springframework.data.mongodb.core.convert.MappingMongoConverter">  
        <constructor-arg name="mongoDbFactory" ref="DidatourNew" />  
        <constructor-arg name="mappingContext" ref="mappingContext" />  
        <property name="typeMapper" ref="defaultMongoTypeMapper" />  
    </bean>
    
    <!-- 默认Mongodb类型映射 -->  
    <bean id="defaultMongoTypeMapper" class="org.springframework.data.mongodb.core.convert.DefaultMongoTypeMapper">  
        <constructor-arg name="typeKey">  
            <null /><!-- 这里设置为空,可以把 spring data mongodb 多余保存的_class字段去掉 -->  
        </constructor-arg>  
    </bean> 
  	<!-- mongodb的主要操作对象，所有对mongodb的增删改查的操作都是通过它完成 -->
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
       <constructor-arg name="mongoDbFactory" ref="DidatourNew" />
       <constructor-arg name="mongoConverter" ref="mappingMongoConverter" />
    </bean>  
  
	<!-- MongoDB GridFS Template 支持，操作mongodb存放的文件 -->
  <!--   <mongo:mapping-converter id="converter" db-factory-ref="mongoDbFactory"/> -->
    <bean id="gridFsTemplate" class="org.springframework.data.mongodb.gridfs.GridFsTemplate">
      <constructor-arg ref="DidatourNew"/>
      <constructor-arg ref="mappingMongoConverter"/>
    </bean>
    
    <!-- 使用annotation定义事务 -->
    <!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

    <!-- 扫描实现 -->
    <!-- <context:component-scan base-package="com.qooco.mongo.impl" /> -->
    
    
     <!-- 映射转换器，扫描back-package目录下的文件，根据注释，把它们作为mongodb的一个collection的映射 -->
    <!-- <mongo:mapping-converter base-package="com.xxx.xxx.domain" /> -->
    
    <!-- mongodb bean的仓库目录，会自动扫描扩展了MongoRepository接口的接口进行注入 -->
   <!--  <mongo:repositories base-package="com.xxx.xxx.persist.mongodb"/> -->
  	
</beans>  